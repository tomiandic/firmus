[{"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\index.js":"1","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\Landing\\index.js":"2","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormContainer\\index.js":"3","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\Landing\\style.js":"4","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormContainer\\style.js":"5","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\JobStep.js":"6","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\AvailabilityStep.js":"7","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\BasicInfoStep.js":"8","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\UI\\ListOption\\index.js":"9","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\theme\\index.js":"10","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\UI\\ListOption\\style.js":"11","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\LanguageStep.js":"12","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\VerificationCodeStep.js":"13","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\NumberConfirmationStep.js":"14"},{"size":968,"mtime":1617725912135,"results":"15","hashOfConfig":"16"},{"size":2292,"mtime":1617819614135,"results":"17","hashOfConfig":"16"},{"size":7442,"mtime":1617823565457,"results":"18","hashOfConfig":"16"},{"size":2851,"mtime":1617819723985,"results":"19","hashOfConfig":"16"},{"size":7804,"mtime":1617826022702,"results":"20","hashOfConfig":"16"},{"size":1666,"mtime":1617728164611,"results":"21","hashOfConfig":"16"},{"size":1385,"mtime":1617725912126,"results":"22","hashOfConfig":"16"},{"size":16307,"mtime":1617725912127,"results":"23","hashOfConfig":"16"},{"size":1092,"mtime":1617726987683,"results":"24","hashOfConfig":"16"},{"size":2168,"mtime":1617824916920,"results":"25","hashOfConfig":"16"},{"size":249,"mtime":1617729153050,"results":"26","hashOfConfig":"16"},{"size":4681,"mtime":1617731374191,"results":"27","hashOfConfig":"16"},{"size":2871,"mtime":1617725912129,"results":"28","hashOfConfig":"16"},{"size":1216,"mtime":1617823883512,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"lfdfq0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\index.js",["60"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\Landing\\index.js",["61","62","63","64"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormContainer\\index.js",["65","66"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\Landing\\style.js",["67","68"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormContainer\\style.js",["69","70"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\JobStep.js",[],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\AvailabilityStep.js",[],["71","72"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\BasicInfoStep.js",["73","74","75","76","77","78","79","80","81","82"],"import React, {useState, useEffect} from 'react';\r\nimport ListOption from '../../UI/ListOption';\r\nimport {List as VirtualList} from 'react-virtualized';\r\nimport {TextField, makeStyles, InputLabel, Modal, Backdrop, Paper, Fade, Button, Divider, CircularProgress} from '@material-ui/core';\r\nimport LocationOnOutlinedIcon from '@material-ui/icons/LocationOnOutlined';\r\nimport DatePicker from 'react-mobile-datepicker';\r\nimport locationIllustration from '../../../assets/LocationIllustration.svg';\r\nimport locationErrorIllustration from '../../../assets/LocationErrorIllustration.svg';\r\nimport styles from \"../FormContainer/style.js\";\r\nimport data from \"./../../../data/data.json\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nconst DATE_CONFIG = {\r\n    'date': {\r\n        format: 'D',\r\n        caption: 'Day',\r\n        step: 1,\r\n    },\r\n    'month': {\r\n        format: 'M',\r\n        caption: 'Mon',\r\n        step: 1,\r\n    },\r\n    'year': {\r\n        format: 'YYYY',\r\n        caption: 'Year',\r\n        step: 1,\r\n    }\r\n}\r\n\r\n\r\nexport default function BasicInfoStep(props){\r\n\r\n    const [openCityList, setOpenCityList] = useState(false);\r\n    const [openLocationFeedback, setOpenLocationFeedback] = useState(false);\r\n    const [filterValue, setFilterValue] = useState(\"\");\r\n    const [datePickerOpen, setDatePickerOpen] = useState(false);\r\n    const [currentLocation, setCurrentLocation] = useState(null);\r\n    const [locationError, setLocationError] = useState(null);\r\n    const [pickedCity, setPickedCity] = useState(null);\r\n\r\n\r\n    const handleDatePickerOpen = () => {\r\n\t\tsetDatePickerOpen( true );\r\n\t}\r\n\r\n\tconst handleDatePickerClose = () => {\r\n\t\tsetDatePickerOpen( false );\r\n\t}\r\n\r\n\tconst handleSelectDate = (time) => {\r\n        setInfo(prevState => ({...prevState, date:time}));\r\n        setDatePickerOpen( false );\r\n\t}\r\n\r\n    const handleInputChange = (e) => {\r\n        const {name, value, type, checked} = e.target;\r\n        setInfo(prevState => ({...prevState, [name]:value}));\r\n    } \r\n\r\n    const handleCityPick = (e) => {\r\n        const {name, value, type, checked} = e.target;\r\n        setPickedCity(name);\r\n    }\r\n\r\n    const handlePickedCitySave = (e) => {\r\n        setInfo(prevState => ({...prevState, city:pickedCity}));\r\n        setOpenCityList(false);\r\n    }\r\n\r\n    const filterCities = (city) => {\r\n        return city.toLowerCase().includes(filterValue);\r\n    }\r\n\r\n    const formatDate = (date) => {\r\n        let day = date.getDate();\r\n        let month = date.getMonth()+1;\r\n        let year = date.getFullYear();\r\n        return`${day}/${month}/${year}`;\r\n    }\r\n\r\n    const getUserLocation = () => {\r\n        setOpenLocationFeedback(true);\r\n        if ( navigator.geolocation ) { \r\n           navigator.geolocation.getCurrentPosition( setCurrentPosition, positionError, { \r\n                enableHighAccuracy: true, \r\n                timeout: 15000, \r\n                maximumAge: 0 \r\n            } );\r\n        } \r\n    }\r\n\r\n    function positionError( error ) { \r\n        switch ( error.code ) { \r\n            case error.PERMISSION_DENIED: \r\n                setLocationError( \"Korisnik nije dopustio pristup lokaciji uređaja\" ); \r\n                break; \r\n            default: \r\n                setLocationError( \"Trenutno ne možemo pristupiti lokaciji vašeg uređaja\" ); \r\n                break; \r\n        }\r\n    }\r\n\r\n    function setCurrentPosition( position ) { \r\n        fetch(`http://api.positionstack.com/v1/reverse?access_key=${data.LOCATION_API_KEY}&query=${position.coords.latitude},${position.coords.longitude}`)\r\n        .then(res => res.json())\r\n        .then(res => setCurrentLocation(res.data[0].label))\r\n    }\r\n\r\n    const savePosition = () => {\r\n        setInfo(prevState => ({...prevState, city:currentLocation}));\r\n        setOpenLocationFeedback(false);\r\n        setOpenCityList(false);\r\n    }\r\n\r\n    const{setInfo, info} = props;\r\n    \r\n    const rowRenderer= ({\r\n        index,\r\n        isScrolling,\r\n        isVisible,\r\n        key,\r\n        parent, \r\n        style\r\n    }) => {\r\n        const filteredCities = data.cities.filter(filterCities);\r\n        const city = filteredCities[index];\r\n        return (\r\n            <ListOption type=\"radio\" optionName={city} optionChecked={city===pickedCity} handleCheckbox={handleCityPick} key={key} style={{...style, width: \"100%\"}} />\r\n        ) \r\n    }\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div style={{...props.style}} className={classes.basicInfoContainer}>\r\n\r\n            <div style={{minWidth:\"100%\"}} className={classes.inputContainer}>\r\n                <InputLabel className={classes.inputLabel}>Ime i prezime*</InputLabel>\r\n                <TextField onChange={(e) => handleInputChange(e)} value={info.fullName} name=\"fullName\" className={classes.infoInput} variant=\"filled\"/>\r\n            </div>  \r\n\r\n            <div style={{marginRight: 5}} className={classes.inputContainer}>\r\n                <InputLabel className={classes.inputLabel}>Grad stanovanja*</InputLabel>\r\n                <TextField inputProps={{readOnly:true}} onClick={() => setOpenCityList(true)} onChange={(e) => handleInputChange(e)} value={info.city} name=\"city\" className={classes.infoInput} variant=\"filled\"/> \r\n            </div>\r\n\r\n            <div className={classes.inputContainer}>\r\n                <InputLabel className={classes.inputLabel}>Datum rođenja*</InputLabel>\r\n                <TextField inputProps={{readOnly:true}} onClick={handleDatePickerOpen} onChange={(e) => handleInputChange(e)} value={formatDate(info.date)} name=\"date\" className={classes.infoInput} variant=\"filled\"/>\r\n                <DatePicker\r\n                    value={info.date}\r\n                    isOpen={datePickerOpen}\r\n                    onSelect={handleSelectDate}\r\n                    showHeader={false}\r\n                    theme=\"android\"\r\n                    dateConfig={DATE_CONFIG}\r\n                    confirmText=\"Spremi\"\r\n                    cancelText=\"Odustani\"\r\n                    onCancel={handleDatePickerClose}\r\n                    />\r\n            </div>\r\n\r\n            <div style={{minWidth:\"100%\"}} className={classes.inputContainer}>\r\n                <InputLabel className={classes.inputLabel}>Email adresa*</InputLabel>\r\n                <TextField name=\"mail\" onChange={(e)=>handleInputChange(e)} value={info.mail} className={classes.infoInput} variant=\"filled\"/>\r\n            </div>\r\n            <div className={classes.inputContainer}>\r\n            <InputLabel className={classes.inputLabel}>Spol*</InputLabel>\r\n\r\n            <div className={classes.pickerContainer}>\r\n                <div className={info.genre===\"F\"?`${classes.buttonPicker} ${classes.buttonPickerActive}`:classes.buttonPicker}>\r\n                    <input name=\"genre\" className={classes.buttonPickerInput} id=\"F\" value=\"F\" type=\"checkbox\" onChange={(e) => handleInputChange(e)} checked={info.genre===\"F\"} />\r\n                    <svg className={classes.buttonPickerCheck} viewBox=\"0 0 48.89 48.89\"><circle cx=\"24.45\" cy=\"24.45\" r=\"24.45\" fill=\"#d9e4f4\"></circle><polyline points=\"10.26 25.54 21.14 35.45 38.63 13.44\" fill=\"none\" stroke=\"#1479ec\" strokeMiterlimit=\"10\" strokeWidth=\"7\"></polyline></svg>\r\n                    <label htmlFor={\"F\"} className={classes.buttonPickerLabel}>\r\n                        <svg className={classes.buttonPickerMainIcon} width=\"29.709\" height=\"29.703\" viewBox=\"0 0 29.709 29.703\"> <g transform=\"translate(0.253 0.25)\"> <path d=\"M37.189,36.616l-1.1-4.335,0-.014a5.171,5.171,0,0,0-3.914-3.647h-.006l-1.08-.211V16.478a8.478,8.478,0,0,0-16.957,0v11.93l-1.08.211h-.006a5.171,5.171,0,0,0-3.914,3.647l0,.014-1.1,4.335a.47.47,0,0,0,.456.587H36.733a.47.47,0,0,0,.456-.587ZM15.066,16.478a7.536,7.536,0,0,1,15.073,0V28.224L25.9,27.395V26.141a6.885,6.885,0,0,0,3.3-5.423V16.949a.283.283,0,0,0,0-.041.471.471,0,0,0-.383-.508,4.784,4.784,0,0,1-3.047-2.055.471.471,0,0,0-.719-.073,7.452,7.452,0,0,1-8.371,1.54.471.471,0,0,0-.6.195c-.008.013-.014.026-.021.04a.475.475,0,0,0-.042.194v4.476a6.885,6.885,0,0,0,3.3,5.423v1.254l-4.239.829ZM22.6,26.37a6.063,6.063,0,0,1-3.63-1.673,5.36,5.36,0,0,1-2.022-3.979V16.938a8.374,8.374,0,0,0,8.358-1.628,5.734,5.734,0,0,0,2.946,1.929v3.478A5.36,5.36,0,0,1,26.233,24.7,6.063,6.063,0,0,1,22.6,26.37Zm2.355.317v1.1c0,.9-1.321,3-2.355,4.4-1.034-1.4-2.355-3.5-2.355-4.4v-1.1a5.511,5.511,0,0,0,2.355.625A5.511,5.511,0,0,0,24.957,26.687Zm6.123,9.575V34.377a.471.471,0,0,0-.942,0v1.884H15.066V34.377a.471.471,0,0,0-.942,0v1.884H9.078l.953-3.741a4.231,4.231,0,0,1,3.2-2.977l6.153-1.2c.432,1.778,2.581,4.569,2.85,4.914a.471.471,0,0,0,.743,0c.269-.344,2.418-3.136,2.85-4.914l6.153,1.2a4.231,4.231,0,0,1,3.2,2.977l.953,3.741Z\" transform=\"translate(-8.001 -8)\" /> <path d=\"M241.413,264h-.942a.471.471,0,1,0,0,.942h.942a.471.471,0,0,0,0-.942Z\" transform=\"translate(-226.34 -248.927)\"/> <ellipse cx=\"1\" cy=\"0.5\" rx=\"1\" ry=\"0.5\" transform=\"translate(11 10.103)\" /> <ellipse cx=\"1\" cy=\"0.5\" rx=\"1\" ry=\"0.5\" transform=\"translate(16 10.103)\" /> </g> </svg>\r\n                    </label>\r\n                </div>\r\n                <div className={info.genre===\"M\"?`${classes.buttonPicker} ${classes.buttonPickerActive}`:classes.buttonPicker}>\r\n                    <input name=\"genre\" className={classes.buttonPickerInput} id=\"M\" value=\"M\" type=\"checkbox\" onChange={(e) => handleInputChange(e)} checked={info.genre===\"M\"} />\r\n                    <svg className={classes.buttonPickerCheck} viewBox=\"0 0 48.89 48.89\"><circle cx=\"24.45\" cy=\"24.45\" r=\"24.45\" fill=\"#d9e4f4\"></circle><polyline points=\"10.26 25.54 21.14 35.45 38.63 13.44\" fill=\"none\" stroke=\"#1479ec\" strokeMiterlimit=\"10\" strokeWidth=\"7\"></polyline></svg>\r\n                    <label htmlFor={\"M\"} className={classes.buttonPickerLabel}>\r\n                        <svg className={classes.buttonPickerMainIcon} width=\"29.203\" height=\"29.203\" viewBox=\"0 0 29.203 29.203\"> <path d=\"M37.189,36.616l-1.1-4.335,0-.014a5.171,5.171,0,0,0-3.914-3.647l-5.8-1.22V26.126a6.6,6.6,0,0,0,2.758-4.466h.3a1.65,1.65,0,0,0,1.649-1.649V18.6a1.65,1.65,0,0,0-1.649-1.649H29.2V15.838a4.18,4.18,0,0,0,2.407-3.1,4.958,4.958,0,0,0-.07-2.037.471.471,0,0,0-.845-.132c-.414.621-2.489-.523-3.269-.953L27.1,9.437A7.812,7.812,0,0,0,22.6,8a6.6,6.6,0,0,0-6.594,6.594v2.355h-.236A1.65,1.65,0,0,0,14.124,18.6v1.413a1.65,1.65,0,0,0,1.649,1.649h.3a6.6,6.6,0,0,0,2.758,4.466V27.4l-5.8,1.22a5.171,5.171,0,0,0-3.914,3.647l0,.014-1.1,4.335a.47.47,0,0,0,.456.587H36.733a.47.47,0,0,0,.456-.587Zm-21.181-15.9h-.236a.707.707,0,0,1-.707-.707V18.6a.707.707,0,0,1,.707-.707h.236Zm13.424-2.826a.707.707,0,0,1,.707.707v1.413a.707.707,0,0,1-.707.707H29.2V17.891Zm-12.482-3.3A5.659,5.659,0,0,1,22.6,8.942a6.983,6.983,0,0,1,4.01,1.3l.028.016c.1.052.207.112.324.177,1.062.585,2.685,1.48,3.766,1.188a3.36,3.36,0,0,1-2.19,3.48.471.471,0,0,0-.286.433v.726A4.748,4.748,0,0,1,25.764,14.4a.471.471,0,0,0-.719-.073,7.55,7.55,0,0,1-8.094,1.6Zm0,6.123V16.938a8.494,8.494,0,0,0,8.359-1.571,5.7,5.7,0,0,0,2.945,1.874v3.477a5.652,5.652,0,0,1-11.3,0Zm8.478,5.957v1.108a2.1,2.1,0,0,1-.924,1.829,3.427,3.427,0,0,1-1.9.526c-2.086,0-2.826-1.269-2.826-2.355V26.675A6.587,6.587,0,0,0,25.428,26.675Zm6.594,9.586V34.377a.471.471,0,0,0-.942,0v1.884H14.124V34.377a.471.471,0,1,0-.942,0v1.884h-4.1l.953-3.741a4.231,4.231,0,0,1,3.2-2.977l5.648-1.189a2.979,2.979,0,0,0,1.1,1.892,4.194,4.194,0,0,0,2.627.834,4.194,4.194,0,0,0,2.627-.834,2.979,2.979,0,0,0,1.1-1.892l5.648,1.189a4.231,4.231,0,0,1,3.2,2.977l.953,3.741Z\" transform=\"translate(-8.001 -8)\" /> <path d=\"M234.826,264.471a.471.471,0,0,0-.471-.471h-1.884a.471.471,0,1,0,0,.942h1.884A.471.471,0,0,0,234.826,264.471Z\" transform=\"translate(-218.811 -248.927)\" /> <ellipse cx=\"1\" cy=\"0.5\" rx=\"1\" ry=\"0.5\" transform=\"translate(10.553 10.103)\" /> <ellipse cx=\"1\" cy=\"0.5\" rx=\"1\" ry=\"0.5\" transform=\"translate(16.553 10.103)\" /> </svg>\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n            <Modal\r\n            open={openCityList}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            onClose={() => setOpenCityList(false)}>\r\n                <Fade in={openCityList}>\r\n                    <Paper className={classes.modalContainer}>\r\n                        <div className={classes.modalTopActions}>\r\n                            <div onClick={getUserLocation} className={classes.locationButton}>\r\n                                <LocationOnOutlinedIcon className={classes.locationButtonIcon} />  \r\n                                <div>\r\n                                    <h4 className={classes.locationButtonTitle}>Koristi moju trenutnu lokaciju</h4>\r\n                                    <p className={classes.locationButtonSubTitle}>Dopustite Firmusu pristup lokaciji vašeg uredjaja</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Divider light />\r\n                        <div className={classes.modalTopActions}>\r\n                            <TextField \r\n                                variant=\"outlined\"  \r\n                                value={filterValue}\r\n                                className={classes.modalInput}\r\n                                onChange={e => setFilterValue(e.target.value.toLowerCase())}\r\n                                placeholder=\"&#x1F50D; Pretraži grad..\"\r\n                            />\r\n                        </div>\r\n                        <div className={classes.modalContent}>\r\n                            <VirtualList\r\n                                width={1}\r\n                                height={1000}\r\n                                rowCount={data.cities?data.cities.filter(filterCities).length:0}\r\n                                rowHeight={55}\r\n                                rowRenderer={rowRenderer}\r\n                                containerStyle={{\r\n                                  width: \"100%\",\r\n                                  maxWidth: \"100%\"\r\n                                }}\r\n                                style={{width: \"100%\"}}\r\n                            />\r\n                        </div>\r\n                        <div className={classes.modalActionContainer}>\r\n                            <Button variant=\"contained\" onClick={() => handlePickedCitySave()} className={classes.formButton}>Spremi</Button>\r\n                        </div>\r\n                    </Paper>\r\n                </Fade>\r\n            </Modal>\r\n\r\n            <Modal\r\n                open={openLocationFeedback}\r\n                closeAfterTransition\r\n                BackdropComponent={Backdrop}\r\n                onClose={() => setOpenLocationFeedback(false)}>\r\n                    <Fade in={openLocationFeedback}>\r\n                        <Paper className={classes.modalContainer}>\r\n                            <div className={classes.modalLocationFeedback}>\r\n                                {\r\n                                currentLocation?\r\n                                    <>\r\n                                        <img className={classes.illustration} src={locationIllustration} /><br /> <br />\r\n                                        <p>Tvoja lokacija je:</p>\r\n                                        <h1>{currentLocation}</h1>\r\n                                        <Button variant=\"contained\" onClick={() => savePosition()} className={classes.formButton}>Postavi kao moju lokaciju</Button>\r\n                                        <a onClick={() => setOpenLocationFeedback(false)} className={classes.subLink}>Odaberi lokaciju ručno</a>\r\n                                    </>\r\n                                :locationError?\r\n                                    <>\r\n                                        <img className={classes.illustration} src={locationErrorIllustration} /><br /> <br />\r\n                                        <h1>{locationError}</h1>\r\n                                        <a onClick={() => setOpenLocationFeedback(false)} className={classes.subLink}>Unesi lokaciju ručno</a>\r\n                                    </>\r\n                                :\r\n                                    <CircularProgress />\r\n                                }\r\n                            </div>\r\n                        </Paper>\r\n                    </Fade>\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}","C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\UI\\ListOption\\index.js",[],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\theme\\index.js",[],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\UI\\ListOption\\style.js",["83"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\LanguageStep.js",["84"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\VerificationCodeStep.js",["85","86"],"C:\\Users\\TomislavAndjic\\Documents\\firmus\\firmus\\src\\components\\Views\\FormSteps\\NumberConfirmationStep.js",["87"],{"ruleId":"88","severity":1,"message":"89","line":29,"column":1,"nodeType":"90","messageId":"91","endLine":35,"endColumn":11},{"ruleId":"92","severity":1,"message":"93","line":37,"column":17,"nodeType":"94","endLine":37,"endColumn":74},{"ruleId":"92","severity":1,"message":"93","line":39,"column":29,"nodeType":"94","endLine":39,"endColumn":79},{"ruleId":"92","severity":1,"message":"93","line":43,"column":17,"nodeType":"94","endLine":43,"endColumn":67},{"ruleId":"95","severity":1,"message":"96","line":51,"column":17,"nodeType":"94","endLine":51,"endColumn":81},{"ruleId":"97","severity":1,"message":"98","line":10,"column":29,"nodeType":"99","messageId":"100","endLine":10,"endColumn":33},{"ruleId":"97","severity":1,"message":"101","line":73,"column":11,"nodeType":"99","messageId":"100","endLine":73,"endColumn":19},{"ruleId":"102","severity":1,"message":"103","line":2,"column":1,"nodeType":"104","endLine":130,"endColumn":3},{"ruleId":"105","severity":1,"message":"106","line":93,"column":7,"nodeType":"107","messageId":"108","endLine":93,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":1,"column":1,"nodeType":"104","endLine":367,"endColumn":3},{"ruleId":"105","severity":1,"message":"109","line":31,"column":5,"nodeType":"107","messageId":"108","endLine":31,"endColumn":15},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"97","severity":1,"message":"114","line":1,"column":26,"nodeType":"99","messageId":"100","endLine":1,"endColumn":35},{"ruleId":"97","severity":1,"message":"115","line":57,"column":29,"nodeType":"99","messageId":"100","endLine":57,"endColumn":33},{"ruleId":"97","severity":1,"message":"116","line":57,"column":35,"nodeType":"99","messageId":"100","endLine":57,"endColumn":42},{"ruleId":"97","severity":1,"message":"117","line":62,"column":22,"nodeType":"99","messageId":"100","endLine":62,"endColumn":27},{"ruleId":"97","severity":1,"message":"115","line":62,"column":29,"nodeType":"99","messageId":"100","endLine":62,"endColumn":33},{"ruleId":"97","severity":1,"message":"116","line":62,"column":35,"nodeType":"99","messageId":"100","endLine":62,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":247,"column":41,"nodeType":"94","endLine":247,"endColumn":108},{"ruleId":"95","severity":1,"message":"96","line":251,"column":41,"nodeType":"94","endLine":251,"endColumn":119},{"ruleId":"92","severity":1,"message":"93","line":255,"column":41,"nodeType":"94","endLine":255,"endColumn":113},{"ruleId":"95","severity":1,"message":"96","line":257,"column":41,"nodeType":"94","endLine":257,"endColumn":119},{"ruleId":"102","severity":1,"message":"103","line":1,"column":1,"nodeType":"104","endLine":15,"endColumn":3},{"ruleId":"92","severity":1,"message":"93","line":56,"column":25,"nodeType":"94","endLine":56,"endColumn":108},{"ruleId":"118","severity":1,"message":"119","line":12,"column":28,"nodeType":"120","messageId":"121","endLine":12,"endColumn":39},{"ruleId":"92","severity":1,"message":"93","line":47,"column":21,"nodeType":"94","endLine":47,"endColumn":84},{"ruleId":"92","severity":1,"message":"93","line":23,"column":21,"nodeType":"94","endLine":23,"endColumn":85},"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'Chip' is defined but never used.","Identifier","unusedVar","'showChip' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-dupe-keys","Duplicate key 'width'.","ObjectExpression","unexpected","Duplicate key 'background'.","no-native-reassign",["122"],"no-negated-in-lhs",["123"],"'useEffect' is defined but never used.","'type' is assigned a value but never used.","'checked' is assigned a value but never used.","'value' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation"]